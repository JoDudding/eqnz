---
title: "#eqnz - latest MMI 3+ earthquakes in New Zealand"
author: "Source: [GeoNet](https://api.geonet.org.nz/)"
format: 
  dashboard:
    orientation: columns
    embed-resources: true
    theme: pulse
---

:::{.hidden}

- ggplot theme and size
- comment on deleted
- add cell colours to table
- github actions to automate
- change dashboard colour theme
- add nz outline to map
:::

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

# assign libraries
library(tidyverse)
library(httr2)
library(sf)
library(glue)
library(gt)
library(scales)
library(ggtext)
library(leaflet)

# get current time
time_now <- now(tzone = "Pacific/Auckland")

# mapping of mmi to intensity with colour palette used by geonet
mmi_intensity <- tribble(
  ~mmi,	~intensity, ~colour,
  1, 'unnoticeable','#FFF7F3',
  2, 'unnoticeable','#FEEDDE',
  3, 'weak',        '#FDD0A2',
  4, 'light',       '#FDAE6B',
  5, 'moderate',    '#FD8D3C',
  6, 'strong',      '#F16913',
  7, 'severe',      '#F03B20',
  8, 'extreme',     '#BD0026',
  9, 'extreme',     '#A30021',
  10,	'extreme',    '#A30021',
  11,	'extreme',    '#A30021'
)

pal_mmi <- mmi_intensity$colour
names(pal_mmi) <- mmi_intensity$mmi

theme_set(
  theme_bw(base_size = 13) +
    theme(
      plot.title.position = "plot",
      panel.border = element_rect(fill = NA, colour = NA)
    )
)

```

```{r}
#| label: get-raw-from-api
#| echo: false
#| message: false
#| warning: false

req <- request("https://api.geonet.org.nz/quake?MMI=3") |> 
  req_headers("Accept"="application/vnd.geo+json")

resp <- req_perform(req)

eqnz_raw <- resp |> 
  resp_body_string() |> 
  st_read(quiet = TRUE)

```

```{r}
#| label: data-cleaning
#| echo: false
#| message: false
#| warning: false

eqnz <- eqnz_raw |> 
  #as_tibble() |> 
  mutate(
    date = as_date(time),
    time_interval = interval(time, time_now),
    hours_ago = floor(time_interval / hours(1)),
    days_ago = floor(time_interval / days(1)),
    link = glue('https://www.geonet.org.nz/earthquake/{publicID}'),
    mag_band = floor(magnitude) |> 
      factor(),
    since = case_when(
      hours_ago == 0 ~ 'In the last hour',
      hours_ago == 1 ~ '1 hour ago',
      hours_ago < 24 ~ glue('{hours_ago} hours ago'),
      hours_ago < 48 ~ 'Yesterday',
      days_ago < 7 ~ glue('{days_ago} days ago'),
      days_ago < 14 ~ 'Last week',
      TRUE ~ glue('{floor(days_ago / 7)} weeks ago')
    ) |> 
      fct_reorder(hours_ago),
    nice_time = format(time, "%Y-%m-%d %H:%M")
  ) |> 
  # removed deleted
  filter(quality != 'deleted') |> 
  left_join(mmi_intensity, by = 'mmi')

today_num <- sum(eqnz$days_ago == 0)
week_num <- sum(eqnz$days_ago < 7)

today_colour <- eqnz |> 
  filter(days_ago == 0) |> 
  filter(mmi == max(mmi)) |> 
  slice(1) |> 
  pull(colour)

week_colour <- eqnz |> 
  filter(days_ago <7) |> 
  filter(mmi == max(mmi)) |> 
  slice(1) |> 
  pull(colour)

week_mag <- eqnz |> 
  filter(days_ago <7) |> 
  filter(magnitude == max(magnitude)) |> 
  slice(1) |> 
  mutate(magnitude = round(magnitude, 1)) |> 
  pull(magnitude)

latest_since <- first(eqnz$hours_ago)
latest_mag <- round(first(eqnz$magnitude), 1)
latest_colour <- first(eqnz$colour)
```

## Column

### Row {height=18%}

```{r}
#| label: latest-since
#| component: valuebox
#| title: Hours since last
list(
  icon = "stopwatch",
  color = latest_colour,
  value = as.numeric(latest_since)
)
```

```{r}
#| label: latest-mag
#| component: valuebox
#| title: Magnitude of last
list(
  icon = "activity",
  color = latest_colour,
  value = latest_mag
)
```

```{r}
#| label: day-count
#| component: valuebox
#| title: Number today
list(
  icon = "calendar-event",
  color = today_colour,
  value = today_num
)
```

```{r}
#| label: week-mag
#| component: valuebox
#| title: Largest this week
list(
  icon = "activity",
  color = week_colour,
  value = week_mag
)
```

```{r}
#| label: week-count
#| component: valuebox
#| title: Number this week
list(
  icon = "calendar2",
  color = week_colour,
  value = week_num
)
```

### Row

#### Column {width=25%}

```{r}
#| label: last-ten
#| padding: 0px

colour_text <- function(x, colour) {
  glue::glue("<span style='color:{colour}'>{x}</span>")
}

eqnz |> 
  as_tibble() |> 
  slice(1:10) |> 
  transmute(
    MMI = mmi,
    colour,
    ID = glue('
      [**{publicID}**]({link})\n\n
      {intensity}\n\n
      {since}
    '),
    Summary = glue('
      {nice_time}\n\n
      Magnitude {comma(magnitude, 0.1)}\n\n
      Depth {comma(depth, 1)} km\n\n
      {locality}
    ')
  ) |> 
  gt() |> 
  fmt_markdown() |> 
  cols_align('left') |> 
  cols_width(
    MMI ~ px(25),
    colour ~ px(0),
    ID ~ px(150),
    Summary ~ px(400)
  ) |> 
  cols_hide(colour) |> 
  tab_header(
    title = md("**Last 10 earthquakes**")
  ) |> 
  tab_options(table.font.size = px(13)) |> 
  opt_align_table_header(align = "left") |> 
  tab_style(
    style = cell_fill(color = from_column(column = "colour")),
    locations = cells_body(columns = MMI)
  )

```

#### Column {width=35%}

```{r}
#| label: distribution-mmi
#| padding: 0px

eqnz |> 
  count(mmi, colour) |> 
  ggplot(aes(mmi, n, fill = colour)) +
  geom_col() +
  scale_fill_identity() +
  scale_x_continuous(limits = c(2.5,11.5), breaks = 3:11) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
  labs(
    x = NULL, y = NULL,
    title = 'Distribution of MMI'
  ) +
  guides(fill = 'none')

```


```{r}
#| label: quake-trend

eqnz |> 
  ggplot(aes(time, magnitude, colour = colour, size = sqrt(mmi) * 3)) +
  geom_point() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05)), limits = c(0, NA)) +
  scale_colour_identity() +
  scale_size_identity() +
  labs(
    x = NULL, y = NULL,
    title = 'Trend of magnitude'
  ) +
  guides(size = 'none')
```

#### Column {width=40%}

```{r}
#| label: location-quakes
#| eval: false

eqnz |> 
  mutate(mmi = runif(n(), min = 3, max = 11)) |> 
  arrange(time) |> 
  ggplot(aes(colour = colour, size = mmi / 2)) +
  geom_sf(aes()) +
  scale_colour_identity() +
  scale_size_identity() +
  labs(
    x = NULL, y = NULL,
    size = NULL,
    title = 'Location of quakes'
  ) +
  coord_sf() +
  guides(size = 'none', x = 'none', y = 'none')

#' todo
#' nz outline
#' ggirafe for hover

```

```{r}
#| label: leaflet-quakes
#| eval: true
#| padding: 0px

eqnz |> 
  leaflet() |> 
  addProviderTiles(providers$Esri.WorldGrayCanvas) |> 
  setView((165.6765 + 178.5798)/2, (-37.70652 + -46.82575)/2, zoom = 5) |> 
  addCircleMarkers(
    stroke = FALSE,
    color = ~colour,
    radius = ~sqrt(mmi) * 3,
    fillOpacity = 0.8,
    label = ~glue('
      MMI {mmi}<br>
      Magnitude {comma(magnitude, 0.1)}<br>
      Depth {comma(depth, 1)} km<br>
      Time {nice_time}
    ') |> 
      map(html)
  )

```


### Row

:::{style="font-size: 65%;"}

Sourced from [https://api.geonet.org.nz/](https://api.geonet.org.nz/)
      |      
Last extracted `r format(time_now, "%A, %d %B %Y %I:%M %p")`
      |      
Latest 100 earthquakes less `r nrow(eqnz_raw) - nrow(eqnz)` that have status of `deleted`
:::

